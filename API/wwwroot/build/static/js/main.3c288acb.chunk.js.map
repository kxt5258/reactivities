{"version":3,"sources":["app/models/activity.ts","app/models/Pagination.ts","app/api/agent.ts","app/models/Profile.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/profileStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","features/profiles/FollowButton.tsx","features/profiles/Profilecard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/ImageUpload/PhotoWidgetCropper.tsx","app/common/ImageUpload/PhotoWidgetDropzone.tsx","app/common/ImageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["Activity","init","Object","assign","this","ActivityFormValues","activity","id","undefined","title","category","description","date","city","venue","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","console","log","status","toast","method","errors","hasOwnProperty","history","push","modelStateErrors","key","flat","setServerError","responseBody","url","get","then","body","post","put","delete","agent","Activities","list","params","detail","create","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","listFollowing","predicate","listActivities","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitital","editting","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","setPagination","loadActivities","setLoadingInitital","axiosParams","result","setActivity","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","x","isHost","hostUsername","host","find","Date","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","follwersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","UserStore","credentials","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","setImage","ProfileStore","profile","loadingProfile","uploading","loadingFollowings","followings","activeTab","userActivities","loadingUserActivities","setActiveTab","loadProfile","photo","photos","isMain","p","activityStore","followingCount","loadFollowings","loadUserActivities","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","header","as","NavLink","to","exact","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","onClick","icon","MyTextInput","props","useField","field","meta","Form","Field","touched","label","Label","basic","color","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","Header","textAlign","placeholder","type","render","marginTop","marginBottom","fluid","ValidationErrors","Message","List","map","err","i","ers","validationSchema","Yup","required","isValid","dirty","disabled","Segment","vertical","size","isLoggedIn","Reveal","animated","RevealContent","visible","width","hidden","e","preventDefault","handleFollow","Card","Content","Description","extra","Icon","ActivityListItemAttendee","styles","borderColor","borderWidth","horizontal","Popup","hoverable","trigger","circular","bordered","Group","attached","secondary","clearing","floated","groupedActivities","group","acitivities","sub","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","GridColumn","Loader","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useParams","useHistory","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","border","Comment","resetForm","onKeyPress","shiftKey","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","length","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","details","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","TabPane","CardGroup","PhotoWidgetCropper","setCropper","imagePreview","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzSTyle","borderRaduis","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","handlePhotoUpload","files","revokeObjectURL","overflow","ButtonGroup","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","ItemGroup","ItemImage","ItemContent","StatisticGroup","Statistic","Divider","PrivateRoute","Component","component","rest","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","LoginForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.3c288acb.chunk.js","sourcesContent":["import { Profile } from './Profile';\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = '';\n  category: string = '';\n  description: string = '';\n  date: Date | null = null;\n  city: string = '';\n  venue: string = '';\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.city = activity.city;\n      this.venue = activity.venue;\n    }\n  }\n}\n","export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber;\n  pageSize;\n\n  constructor(pageNumber = 1, pageSize = 2) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}\n","import axios, { AxiosResponse, AxiosError } from 'axios';\nimport { Activity, ActivityFormValues } from '../models/activity';\nimport { toast } from 'react-toastify';\nimport { history } from '../..';\nimport { store } from '../stores/store';\nimport { User, UserFormValues } from '../models/user';\nimport { Photo, Profile, UserActivity } from '../models/Profile';\nimport { PaginatedResult } from '../models/Pagination';\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use((config) => {\n  const token = store.commonStore.token;\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\n    const pagination = response.headers['pagination'];\n    if (pagination) {\n      response.data = new PaginatedResult(\n        response.data,\n        JSON.parse(pagination),\n      );\n    }\n    return response as AxiosResponse<PaginatedResult<any>>;\n  },\n  (error: AxiosError) => {\n    console.log(error.response);\n    const { data, status, config } = error.response!;\n\n    switch (status) {\n      case 400:\n        if (typeof data === 'string') toast.error(data);\n        if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\n          history.push('/not-found');\n        }\n\n        if (data.errors) {\n          const modelStateErrors = [];\n          for (const key in data.errors) {\n            if (data.errors[key]) {\n              modelStateErrors.push(data.errors[key]);\n            }\n          }\n          throw modelStateErrors.flat();\n        }\n        break;\n\n      case 401:\n        toast.error('unauthorised');\n        break;\n\n      case 404:\n        history.push('/not-found');\n        break;\n\n      case 500:\n        store.commonStore.setServerError(data);\n        history.push('/server-error');\n        break;\n\n      default:\n        toast.error('unknown');\n        break;\n    }\n  },\n);\n\nconst responseBody = <T>(response: AxiosResponse<T>) => {\n  return response.data;\n};\n\nconst request = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) =>\n    axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Activities = {\n  list: (params: URLSearchParams) =>\n    axios\n      .get<PaginatedResult<Activity[]>>('/activities', { params })\n      .then(responseBody),\n  detail: (id: string) => request.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) =>\n    request.post<void>('/activities', activity),\n  update: (activity: ActivityFormValues) =>\n    request.put<void>(`/activities/${activity.id}`, activity),\n  delete: (id: string) => request.del<void>(`/activities/${id}`),\n  attend: (id: string) => request.post<void>(`/activities/${id}/attend`, {}),\n};\n\nconst Account = {\n  current: () => request.get<User>('/account'),\n  login: (user: UserFormValues) => request.post<User>('/account/login', user),\n  register: (user: UserFormValues) =>\n    request.post<User>('/account/register', user),\n};\n\nconst Profiles = {\n  get: (username: string) => request.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append('File', file);\n\n    return axios.post<Photo>('photos', formData, {\n      headers: { 'Content-type': 'multipart/form-data' },\n    });\n  },\n  setMainPhoto: (id: string) => request.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => request.del(`/photos/${id}`),\n  updateFollowing: (username: string) =>\n    request.post(`/follow/${username}`, {}),\n  listFollowing: (username: string, predicate: string) =>\n    request.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) =>\n    request.get<UserActivity[]>(\n      `/profiles/${username}/activities?predicate=${predicate}`,\n    ),\n};\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles,\n};\n\nexport default agent;\n","import { User } from './user';\n\nexport interface Profile {\n  username: string;\n  displayName: string;\n  image?: string;\n  bio?: string;\n  follwersCount: number;\n  followingCount: number;\n  following: boolean;\n  photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n  constructor(user: User) {\n    this.username = user.username;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}\n\nexport interface UserActivity {\n  id: string;\n  title: string;\n  category: string;\n  date: Date;\n}\n","import { makeAutoObservable, reaction, runInAction } from 'mobx';\nimport { Activity, ActivityFormValues } from '../models/activity';\nimport agent from '../api/agent';\nimport { format } from 'date-fns';\nimport { store } from './store';\nimport { Profile } from '../models/Profile';\nimport { Pagination, PagingParams } from '../models/Pagination';\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode: boolean = false;\n  loading: boolean = false;\n  loadingInitital: boolean = true;\n  editting: boolean = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set('all', true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      },\n    );\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== 'startDate') {\n          this.predicate.delete(key);\n        }\n      });\n    };\n\n    switch (predicate) {\n      case 'all':\n        resetPredicate();\n        this.predicate.set('all', true);\n        break;\n\n      case 'isGoing':\n        resetPredicate();\n        this.predicate.set('isGoing', true);\n        break;\n\n      case 'isHost':\n        resetPredicate();\n        this.predicate.set('isHost', true);\n        break;\n\n      case 'startDate':\n        this.predicate.delete('startDate');\n        this.predicate.set('startDate', value);\n        break;\n    }\n  };\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\n    params.append('pageSize', this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === 'startDate') {\n        params.append(key, (value as Date).toISOString());\n      } else {\n        params.append(key, value);\n      }\n    });\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort(\n      (a, b) => a.date!.getTime() - b.date!.getTime(),\n    );\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, 'dd MMM yyyy');\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n\n        return activities;\n      }, {} as { [key: string]: Activity[] }),\n    );\n  }\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  loadActivities = async () => {\n    try {\n      this.setLoadingInitital(true);\n      const result = await agent.Activities.list(this.axiosParams);\n\n      result.data.forEach((activity) => {\n        this.setActivity(activity);\n      });\n      this.setPagination(result.pagination);\n      this.setLoadingInitital(false);\n    } catch (error) {\n      console.log(error);\n      this.setLoadingInitital(false);\n    }\n  };\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitital = true;\n      try {\n        activity = await agent.Activities.detail(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        });\n\n        this.setLoadingInitital(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitital(false);\n      }\n    }\n  };\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n\n    if (user) {\n      activity.isGoing = activity.attendees!.some(\n        (x) => x.username === user.username,\n      );\n      activity.isHost = activity.hostUsername === user.username;\n\n      activity.host = activity.attendees?.find(\n        (x) => x.username === activity.hostUsername,\n      );\n    }\n\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  };\n\n  private getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  };\n\n  setLoadingInitital = (value: boolean) => {\n    this.loadingInitital = value;\n  };\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {\n            ...this.getActivity(activity.id),\n            ...activity,\n          };\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees =\n            this.selectedActivity.attendees?.filter(\n              (x) => x.username !== user?.username,\n            );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!,\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n\n      runInAction(() => {\n        this.selectedActivity!.isCancelled =\n          !this.selectedActivity?.isCancelled;\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!,\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  };\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach((activity) => {\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.following\n            ? attendee.follwersCount--\n            : attendee.follwersCount++;\n          attendee.following = !attendee.following;\n        }\n      });\n    });\n  };\n}\n","import { makeAutoObservable, runInAction } from 'mobx';\nimport { history } from '../..';\nimport agent from '../api/agent';\nimport { User, UserFormValues } from '../models/user';\nimport { store } from './store';\n\nexport default class UserStore {\n  user: User | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  login = async (credentials: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(credentials);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push('/activities');\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem('jwt');\n    this.user = null;\n    history.push('/');\n  };\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => {\n        this.user = user;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  register = async (credentials: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(credentials);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push('/activities');\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  setImage = (image: string) => {\n    if (this.user) this.user.image = image;\n  };\n}\n","import { makeAutoObservable, reaction, runInAction } from 'mobx';\nimport agent from '../api/agent';\nimport { Photo, Profile, UserActivity } from '../models/Profile';\nimport { store } from './store';\n\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  loadingProfile = false;\n  uploading = false;\n  loading = false;\n  loadingFollowings = false;\n  followings: Profile[] = [];\n  activeTab = 0;\n  userActivities: UserActivity[] = [];\n  loadingUserActivities = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      (activeTab) => {\n        if (activeTab === 3 || activeTab === 4) {\n          const predicate = activeTab === 3 ? 'followers' : 'followings';\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      },\n    );\n  }\n\n  setActiveTab = (activeTab: any) => {\n    this.activeTab = activeTab;\n  };\n\n  get isCurrentUser() {\n    if (store.userStore.user && this.profile) {\n      return store.userStore.user.username === this.profile.username;\n    }\n    return false;\n  }\n\n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n\n    try {\n      var profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => {\n        this.loadingProfile = false;\n      });\n    }\n  };\n\n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.uploading = false));\n    }\n  };\n\n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  deletePhoto = async (photo: Photo) => {\n    this.loading = true;\n\n    try {\n      //if (photo.isMain) throw 'Cannot delete main photo';\n      await agent.Profiles.deletePhoto(photo.id);\n\n      runInAction(() => {\n        if (this.profile) {\n          this.profile!.photos = this.profile?.photos?.filter(\n            (p) => p.id !== photo.id,\n          );\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  updateFollowing = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n\n      runInAction(() => {\n        if (\n          this.profile &&\n          this.profile.username !== store.userStore.user?.username &&\n          this.profile.username === username\n        ) {\n          following\n            ? this.profile.follwersCount++\n            : this.profile.follwersCount--;\n          this.profile.following = !this.profile.following;\n        }\n\n        if (\n          this.profile &&\n          this.profile.username === store.userStore.user?.username\n        ) {\n          following\n            ? this.profile.followingCount++\n            : this.profile.followingCount--;\n        }\n\n        this.followings.forEach((profile) => {\n          if (profile.username === username) {\n            profile.following\n              ? profile.follwersCount--\n              : profile.follwersCount++;\n            profile.following = !profile.following;\n          }\n        });\n      });\n    } catch (error) {\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  loadFollowings = async (predicate: string) => {\n    this.loadingFollowings = true;\n    try {\n      const followings = await agent.Profiles.listFollowing(\n        this.profile!.username,\n        predicate,\n      );\n\n      console.log(followings);\n\n      runInAction(() => {\n        this.followings = followings;\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loadingFollowings = false));\n    }\n  };\n\n  loadUserActivities = async (username: string, predicate?: string) => {\n    this.loadingUserActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivities(\n        username,\n        predicate!,\n      );\n      runInAction(() => {\n        this.userActivities = activities;\n      });\n    } catch (error) {\n      console.log('ERROR', error);\n    } finally {\n      runInAction(() => {\n        this.loadingUserActivities = false;\n      });\n    }\n  };\n}\n","import ActivityStore from './activityStore';\nimport { createContext, useContext } from 'react';\nimport CommonStore from './commonStore';\nimport UserStore from './userStore';\nimport ModalStore from './modalStore';\nimport ProfileStore from './profileStore';\nimport CommentStore from './commentStore';\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { ServerErrorInterface } from '../../features/errors/serverErrorInterface';\nimport { makeAutoObservable, reaction } from 'mobx';\n\nexport default class CommonStore {\n  error: ServerErrorInterface | null = null;\n  token: string | null = window.localStorage.getItem('jwt');\n  appLoaded = false\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.token,\n      token => {\n        if(token) {\n          window.localStorage.setItem('jwt', token);\n        } else {\n          window.localStorage.removeItem('jwt')\n        }\n      }\n    )\n  }\n\n  setServerError = (error: ServerErrorInterface) => {\n    this.error = error;\n  };\n\n  setToken = (token: string | null) => {\n    this.token = token\n  }\n\n  setAppLoaded = () => {\n    this.appLoaded = true\n  }\n}\n","import { makeAutoObservable } from 'mobx';\n\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  };\n\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  };\n}\n","import {\n  HubConnection,\n  HubConnectionBuilder,\n  LogLevel,\n} from '@microsoft/signalr';\nimport { makeAutoObservable, runInAction } from 'mobx';\nimport { ChatComment } from '../models/ChatComment';\nimport { store } from './store';\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n          accessTokenFactory: () => store.userStore.user?.token!,\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n      this.hubConnection\n        .start()\n        .catch((error) =>\n          console.log('Error establishing connection to SignalR', error),\n        );\n      this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach((comment) => {\n            comment.createdAt = new Date(comment.createdAt + 'Z');\n          });\n          this.comments = comments;\n        });\n      });\n\n      this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n        runInAction(() => {\n          comment.createdAt = new Date(comment.createdAt);\n          this.comments.unshift(comment);\n        });\n      });\n    }\n  };\n\n  stopHubConnection = () => {\n    this.hubConnection\n      ?.stop()\n      .catch((error) => console.log('Error disconnecting from hub', error));\n  };\n\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  };\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke('SendComment', values);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import { Menu, Container, Button, Image, Dropdown } from 'semantic-ui-react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { useStore } from '../stores/store';\nimport { observer } from 'mobx-react-lite';\n\nfunction NarBar() {\n  const {\n    userStore: { user, logout },\n  } = useStore();\n\n  return (\n    <Menu inverted fixed='top'>\n      <Container>\n        <Menu.Item header as={NavLink} to='/' exact>\n          <img\n            src='/assets/logo.png'\n            alt='logo'\n            style={{ marginRight: '10px' }}\n          />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item as={NavLink} to='/activities' name='activities'></Menu.Item>\n        <Menu.Item as={NavLink} to='/errors' name='errors'></Menu.Item>\n        <Menu.Item as={NavLink} to='/createActivity'>\n          <Button positive content='Create Activity'></Button>\n        </Menu.Item>\n        <Menu.Item position='right'>\n          <Image\n            src={user?.image || '/assets/user.png'}\n            avatar\n            spaced='right'\n          />\n          <Dropdown pointing='top left' text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                as={Link}\n                to={`/profiles/${user?.username}`}\n                text='My Profile'\n              />\n              <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n}\n\nexport default observer(NarBar);\n","import React from 'react';\nimport { useField } from 'formik';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  label?: string;\n  type?: string;\n}\n\nconst MyTextInput = (props: Props) => {\n  const [field, meta] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error && (\n        <Label basic color='red'>\n          {meta.error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default MyTextInput;\n","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Header, Label } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\n\nconst LoginForm = () => {\n  const { userStore } = useStore();\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '', error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .login(values)\n          .catch((error) => setErrors({ error: 'Invalid email or password' }))\n      }>\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n          <Header\n            as='h2'\n            content='Login to Reactivities'\n            color='teal'\n            textAlign='center'\n          />\n          <MyTextInput name='email' placeholder='Email' />\n          <MyTextInput name='password' placeholder='Password' type='password' />\n          <ErrorMessage\n            name='error'\n            render={() => (\n              <Label\n                style={{ marginTop: 5, marginBottom: 5 }}\n                basic\n                color='red'\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content='Login'\n            type='submit'\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default observer(LoginForm);\n","import { Message } from 'semantic-ui-react';\ninterface Props {\n  errors: any;\n}\n\nconst ValidationErrors = ({ errors }: Props) => {\n  console.log(errors);\n  return (\n    <Message error>\n      {errors && (\n        <Message.List>\n          {errors.map((err: any, i: any) => (\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n    </Message>\n  );\n};\n\nexport default ValidationErrors;\n","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport * as Yup from 'yup';\nimport { Button, Header } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\nimport ValidationErrors from '../errors/ValidationErrors';\n\nconst RegisterForm = () => {\n  const { userStore } = useStore();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n        displayName: '',\n        username: '',\n        error: null,\n      }}\n      onSubmit={(values, { setErrors }) =>\n        userStore.register(values).catch((ers) => setErrors({ error: ers }))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}>\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form\n          className='ui form error'\n          onSubmit={handleSubmit}\n          autoComplete='off'>\n          <Header\n            as='h2'\n            content='Register to Reactivities'\n            color='teal'\n            textAlign='center'\n          />\n          <MyTextInput name='displayName' placeholder='Display Name' />\n          <MyTextInput name='username' placeholder='Username' />\n          <MyTextInput name='email' placeholder='Email' />\n          <MyTextInput name='password' placeholder='Password' type='password' />\n          <ErrorMessage\n            name='error'\n            render={() => <ValidationErrors errors={errors.error} />}\n          />\n          <Button\n            disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting}\n            positive\n            content='Register'\n            type='submit'\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default observer(RegisterForm);\n","import React from 'react';\nimport { Container, Segment, Header, Image, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { useStore } from '../../app/stores/store';\nimport { observer } from 'mobx-react-lite';\nimport LoginForm from '../users/LoginForm';\nimport RegisterForm from '../users/RegisterForm';\n\nconst HomePage = () => {\n  const { userStore, modalStore } = useStore();\n\n  return (\n    <Segment inverted textAlign='center' vertical className='masthead'>\n      <Container text>\n        <Header as='h1' inverted>\n          <Image\n            size='massive'\n            src='/assets/logo.png'\n            alt='logo'\n            style={{ marginBottom: 12 }}\n          />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as='h2' inverted content='Welcome to Reacrivities' />\n            <Button as={Link} to='/activities' size='huge' inverted>\n              Go to Activities\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button\n              onClick={() => modalStore.openModal(<LoginForm />)}\n              size='huge'\n              inverted>\n              Login\n            </Button>\n            <Button\n              onClick={() => modalStore.openModal(<RegisterForm />)}\n              size='huge'\n              inverted\n              \n              >\n              Register\n            </Button>\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n};\n\nexport default observer(HomePage);\n","import { observer } from 'mobx-react-lite';\nimport { SyntheticEvent } from 'react';\nimport { Reveal, RevealContent, Button } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/Profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface Props {\n  profile: Profile;\n}\n\nconst FollowButton = ({ profile }: Props) => {\n  const { profileStore, userStore } = useStore();\n  const { updateFollowing, loading } = profileStore;\n\n  if (userStore.user?.username === profile.username) return null;\n\n  const handleFollow = (e: SyntheticEvent, username: string) => {\n    e.preventDefault();\n\n    profile.following\n      ? updateFollowing(username, false)\n      : updateFollowing(username, true);\n  };\n\n  return (\n    <Reveal animated='move'>\n      <RevealContent visible style={{ width: '100%' }}>\n        <Button\n          fluid\n          color='teal'\n          content={profile.following ? 'Following' : 'Not following'}\n        />\n      </RevealContent>\n      <RevealContent hidden style={{ width: '100%' }}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? 'red' : 'green'}\n          content={profile.following ? 'Unfollow' : 'Follow'}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </RevealContent>\n    </Reveal>\n  );\n};\n\nexport default observer(FollowButton);\n","import { observer } from 'mobx-react-lite';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/Profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n  profile: Profile;\n}\n\nconst ProfileCard = ({ profile }: Props) => {\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || '/assets/user.png'} />\n      <Card.Content>\n        <Card.Header> {profile.displayName}</Card.Header>\n        <Card.Description>Bio goes here</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name='user' />\n        {profile.follwersCount} Followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n};\n\nexport default observer(ProfileCard);\n","import { observer } from 'mobx-react-lite';\nimport { Link } from 'react-router-dom';\nimport { List, Image, Popup } from 'semantic-ui-react';\nimport { Profile } from '../../../app/models/Profile';\nimport ProfileCard from '../../profiles/Profilecard';\n\ninterface Props {\n  attendees: Profile[];\n}\n\nexport const ActivityListItemAttendee = ({ attendees }: Props) => {\n  const styles = {\n    borderColor: 'orange',\n    borderWidth: 2,\n  };\n\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item\n              key={attendee.username}\n              as={Link}\n              to={`/profiles/${attendee.username}`}>\n              <Image\n                size='mini'\n                circular\n                src={attendee.image || '/assets/user.png'}\n                bordered\n                style={attendee.following ? styles : null}\n              />\n            </List.Item>\n          }>\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n};\n\nexport default observer(ActivityListItemAttendee);\n","import React from 'react';\nimport { Item, Button, Segment, Icon, Label } from 'semantic-ui-react';\nimport { Activity } from '../../../app/models/activity';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { ActivityListItemAttendee } from './ActivityListItemAttendee';\nimport { observer } from 'mobx-react-lite';\n\ninterface Props {\n  activity: Activity;\n}\n\nconst ActivityListItem = ({ activity }: Props) => {\n  return (\n    <Segment.Group>\n      {activity.isCancelled && (\n        <Label\n          attached='top'\n          color='red'\n          content='Cancelled'\n          style={{ textAlign: 'center' }}></Label>\n      )}\n      <Segment>\n        <Item.Group>\n          <Item>\n            <Item.Image\n              size='tiny'\n              circular\n              src={activity.host?.image || '/assets/user.png'}\n              as={Link}\n              to={`/profiles/${activity.host?.username}`}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by{' '}\n                <Link to={`/profiles/${activity.host?.username}`}>\n                  {activity.host?.displayName}\n                </Link>\n                {activity.isHost && (\n                  <Item.Description>\n                    <Label color='orange' basic>\n                      You're hosting this activity\n                    </Label>\n                  </Item.Description>\n                )}\n                {activity.isGoing && !activity.isHost && (\n                  <Item.Description>\n                    <Label color='green' basic>\n                      You're going to this activity\n                    </Label>\n                  </Item.Description>\n                )}\n              </Item.Description>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n\n      <Segment>\n        <span>\n          <Icon name='clock' /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n          <Icon name='marker' /> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color='teal'\n          floated='right'\n          content='View'\n        />\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default observer(ActivityListItem);\n","import { Fragment } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\n\nimport ActivityListItem from './ActivityListItem';\nimport { useStore } from '../../../app/stores/store';\n\nconst ActivityList = () => {\n  const { activityStore } = useStore();\n  const { groupedActivities } = activityStore;\n\n  return (\n    <>\n      {groupedActivities.map(([group, acitivities]) => (\n        <Fragment key={group}>\n          <Header sub color='teal'>\n            {group}\n          </Header>\n\n          {acitivities.map((activity) => (\n            <ActivityListItem activity={activity} key={activity.id} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  );\n};\n\nexport default observer(ActivityList);\n","import { Menu, Header } from 'semantic-ui-react';\nimport Calendar from 'react-calendar';\nimport { observer } from 'mobx-react-lite';\nimport { useStore } from '../../../app/stores/store';\n\nconst ActivityFilters = () => {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n\n  return (\n    <>\n      <Menu vertical size='large' style={{ width: '100%', marginTop: 25 }}>\n        <Header icon='filter' attached color='teal' content='Filters' />\n        <Menu.Item\n          content='All Acitivities'\n          active={predicate.has('all')}\n          onClick={() => setPredicate('all', 'true')}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={predicate.has('isGoing')}\n          onClick={() => setPredicate('isGoing', 'true')}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={predicate.has('isHost')}\n          onClick={() => setPredicate('isHost', 'true')}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date: Date) => {\n          setPredicate('startDate', date as Date);\n        }}\n        value={predicate.get('startDate') || new Date()}\n      />\n    </>\n  );\n};\n\nexport default observer(ActivityFilters);\n","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color='blue' floated='right' content='View' />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { Grid, GridColumn, Loader } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\n\nimport ActivityList from './ActivityList';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityFilters from './ActivityFilters';\nimport { PagingParams } from '../../../app/models/Pagination';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\n\nexport default observer(function ActivityDashboard() {\n  const { activityStore } = useStore();\n  const {\n    loadActivities,\n    activityRegistry,\n    loadingInitital,\n    setPagingParams,\n    pagination,\n  } = activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  const handleGetNext = () => {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities().then(() => setLoadingNext(false));\n  };\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities]);\n\n  return (\n    <Grid>\n      <Grid.Column width='10'>\n        {loadingInitital && !loadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={\n              !loadingNext &&\n              !!pagination &&\n              pagination.currentPage < pagination.totalPages\n            }\n            initialLoad={false}>\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width='6'>\n        <ActivityFilters />\n      </Grid.Column>\n      <GridColumn width={10}>\n        <Loader active={loadingNext} />\n      </GridColumn>\n    </Grid>\n  );\n});\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface Props {\n  inverted?: boolean;\n  content?: string;\n}\n\nconst LoadingComponent = ({\n  inverted = true,\n  content = 'Loading...',\n}: Props) => {\n  return (\n    <Dimmer active={true} inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  );\n};\n\nexport default LoadingComponent;\n","import React from 'react';\nimport { useField } from 'formik';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  label?: string;\n  rows: number;\n}\n\nconst MyTextArea = (props: Props) => {\n  const [field, meta] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error && (\n        <Label basic color='red'>\n          {meta.error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default MyTextArea;\n","import React from 'react';\nimport { useField } from 'formik';\nimport { Form, Label, Select } from 'semantic-ui-react';\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  label?: string;\n  options: any;\n}\n\nconst MySelectInput = (props: Props) => {\n  const [field, meta, helpers] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select\n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(e, d) => {\n          helpers.setValue(d.value);\n        }}\n        onBlur={() => helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error && (\n        <Label basic color='red'>\n          {meta.error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default MySelectInput;\n","export const categoryOptions = [\n  { text: 'Drinks', value: 'drinks' },\n  { text: 'Culture', value: 'culture' },\n  { text: 'Film', value: 'film' },\n  { text: 'Food', value: 'food' },\n  { text: 'Travel', value: 'travel' },\n  { text: 'Music', value: 'music' },\n];\n","import { useField } from 'formik';\nimport { Form, Label } from 'semantic-ui-react';\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker';\n\n// Partial keyword will make the entries optional\nconst MyDateInput = (props: Partial<ReactDatePickerProps>) => {\n  const [field, meta, helpers] = useField(props.name!);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <ReactDatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error && (\n        <Label basic color='red'>\n          {meta.error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default MyDateInput;\n","import React, { useState, useEffect } from 'react';\nimport { Segment, Button, Header } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport { v4 as uuid } from 'uuid';\nimport { Formik, Form } from 'formik';\n\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { useStore } from '../../../app/stores/store';\nimport * as Yup from 'yup';\nimport MyTextInput from '../../../app/common/form/MyTextInput';\nimport MyTextArea from '../../../app/common/form/MyTextArea';\nimport MySelectInput from '../../../app/common/form/MySelectInput';\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\nimport MyDateInput from '../../../app/common/form/MyDateInput';\nimport { ActivityFormValues } from '../../../app/models/activity';\n\nconst ActivityForm = () => {\n  const { activityStore } = useStore();\n  const {\n    createActivity,\n    updateActivity,\n    loadActivity,\n    loadingInitital,\n    setLoadingInitital,\n  } = activityStore;\n\n  const { id } = useParams<{ id: string }>();\n\n  const history = useHistory();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(\n    new ActivityFormValues(),\n  );\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required('Activity title is required'),\n    description: Yup.string().required('Activity description is required'),\n    category: Yup.string().required(),\n    date: Yup.string().required('Date is required').nullable(),\n    city: Yup.string().required(),\n    venue: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    if (id) {\n      loadActivity(id).then((activity) =>\n        setActivity(new ActivityFormValues(activity)),\n      );\n    } else {\n      setLoadingInitital(false);\n    }\n  }, [id, loadActivity, setLoadingInitital]);\n\n  const handleFormSubmit = (activity: ActivityFormValues) => {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity).then(() =>\n        history.push(`/activities/${newActivity.id}`),\n      );\n    } else {\n      updateActivity(activity).then(() =>\n        history.push(`/activities/${activity.id}`),\n      );\n    }\n  };\n\n  if (loadingInitital)\n    return <LoadingComponent content='Loading Activity...' />;\n\n  return (\n    <Segment clearing>\n      <Header content='Activity Details' sub color='teal' />\n      <Formik\n        initialValues={activity}\n        enableReinitialize\n        validationSchema={validationSchema}\n        onSubmit={(values) => handleFormSubmit(values)}>\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n            <MyTextInput name='title' placeholder='Title' />\n            <MyTextArea placeholder='Description' name='description' rows={4} />\n            <MySelectInput\n              placeholder='Category'\n              name='category'\n              options={categoryOptions}\n            />\n            <MyDateInput\n              placeholderText='Date'\n              name='date'\n              showTimeSelect\n              timeCaption='time'\n              dateFormat='MMMM d, yyyy h:mm aa'\n            />\n\n            <Header content='Location Details' sub color='teal' />\n            <MyTextInput placeholder='City' name='city' />\n            <MyTextInput placeholder='Venue' name='venue' />\n\n            <Button\n              disabled={isSubmitting || !dirty || !isValid}\n              loading={isSubmitting}\n              floated='right'\n              positive\n              type='submit'\n              content='Submit'\n            />\n            <Button\n              as={Link}\n              to='/activities'\n              floated='right'\n              type='button'\n              content='Cancel'\n            />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n};\n\nexport default observer(ActivityForm);\n","import { observer } from 'mobx-react-lite';\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react';\nimport { Activity } from '../../../app/models/activity';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { useStore } from '../../../app/stores/store';\n\nconst activityImageStyle = {\n  filter: 'brightness(30%)',\n};\n\nconst activityImageTextStyle = {\n  position: 'absolute',\n  bottom: '5%',\n  left: '5%',\n  width: '100%',\n  height: 'auto',\n  color: 'white',\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n  const {\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\n  } = useStore();\n\n  return (\n    <Segment.Group>\n      <Segment basic attached='top' style={{ padding: '0' }}>\n        {activity.isCancelled && (\n          <Label\n            style={{ position: 'absolute', zIndex: 1000, top: 20, left: -14 }}\n            ribbon\n            color='red'\n            content='Cancelled'></Label>\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size='huge'\n                  content={activity.title}\n                  style={{ color: 'white' }}\n                />\n                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\n                <p>\n                  Hosted by{' '}\n                  <strong>\n                    <Link to={`/profiles/${activity.host?.username}`}>\n                      {activity.host?.displayName}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached='bottom'>\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCancelled ? 'green' : 'red'}\n              floated='left'\n              basic\n              content={\n                activity.isCancelled\n                  ? 'Re-activate Activity'\n                  : 'Cancel Activity'\n              }\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button\n              disabled={activity.isCancelled}\n              color='orange'\n              floated='right'\n              as={Link}\n              to={`/manage/${activity.id}`}>\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button\n            onClick={updateAttendance}\n            loading={loading}\n            disabled={activity.isCancelled}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button\n            onClick={updateAttendance}\n            loading={loading}\n            color='teal'\n            disabled={activity.isCancelled}>\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\nimport { Activity } from '../../../app/models/activity';\nimport { format } from 'date-fns';\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached='top'>\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size='large' color='teal' name='info' />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='calendar' size='large' color='teal' />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='marker' size='large' color='teal' />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { formatDistanceToNow } from 'date-fns';\nimport { Formik, Form, Field, FieldProps } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react';\nimport * as Yup from 'yup';\nimport { useStore } from '../../../app/stores/store';\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [activityId, commentStore]);\n\n  return (\n    <>\n      <Segment\n        textAlign='center'\n        attached='top'\n        inverted\n        color='teal'\n        style={{ border: 'none' }}>\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Comment.Group>\n          <Formik\n            onSubmit={(values, { resetForm }) =>\n              commentStore.addComment(values).then(() => resetForm())\n            }\n            initialValues={{ body: '' }}\n            validationSchema={Yup.object({\n              body: Yup.string().required(),\n            })}>\n            {({ isSubmitting, isValid, handleSubmit }) => (\n              <Form className='ui form'>\n                <Field name='body'>\n                  {(props: FieldProps) => (\n                    <div style={{ position: 'relative' }}>\n                      <Loader active={isSubmitting} />\n                      <textarea\n                        placeholder='Enter your comments (Enter to submit, SHIFT + enter for new line)'\n                        rows={2}\n                        {...props.field}\n                        onKeyPress={(e) => {\n                          if (e.key === 'Enter' && e.shiftKey) {\n                            return;\n                          }\n                          if (e.key === 'Enter' && !e.shiftKey) {\n                            e.preventDefault();\n                            isValid && handleSubmit();\n                          }\n                        }}></textarea>\n                    </div>\n                  )}\n                </Field>\n              </Form>\n            )}\n          </Formik>\n          {commentStore.comments.map((comment) => {\n            return (\n              <Comment key={comment.id}>\n                <Comment.Avatar src={comment.image || '/assets/user.png'} />\n                <Comment.Content>\n                  <Comment.Author\n                    as={Link}\n                    to={`/profiles/${comment.username}`}>\n                    {comment.displayName}\n                  </Comment.Author>\n                  <Comment.Metadata>\n                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                  </Comment.Metadata>\n                  <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>\n                    {comment.body}\n                  </Comment.Text>\n                </Comment.Content>\n              </Comment>\n            );\n          })}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import React from 'react';\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Activity } from '../../../app/models/activity';\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({\n  activity: { attendees, host },\n}: Props) {\n  if (!attendees) return <></>;\n  return (\n    <>\n      <Segment\n        textAlign='center'\n        style={{ border: 'none' }}\n        attached='top'\n        secondary\n        inverted\n        color='teal'>\n        {attendees.length} {attendees.length === 1 ? 'person' : ' people'} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item style={{ position: 'relative' }} key={attendee.username}>\n              {attendee.username === host?.username && (\n                <Label\n                  style={{ position: 'absolute' }}\n                  color='orange'\n                  ribbon='right'>\n                  Host\n                </Label>\n              )}\n\n              <Image size='tiny' src={attendee.image || '/assets/user.png'} />\n              <Item.Content verticalAlign='middle'>\n                <Item.Header as='h3'>\n                  <Link to={`/profiles/${attendee.username}`}>\n                    {attendee.displayName}\n                  </Link>\n                </Item.Header>\n                {attendee.following && (\n                  <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\n                )}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n});\n","import { useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { useParams } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\n\nconst ActivityDetails = () => {\n  const { activityStore } = useStore();\n  const {\n    selectedActivity: activity,\n    loadActivity,\n    loadingInitital,\n    clearSelectedActivity,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity]);\n\n  if (loadingInitital || !activity) return <LoadingComponent />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDetails);\n","import React, { useState } from 'react';\nimport { Button, Header, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\nimport ValidationErrors from './ValidationErrors';\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios\n      .get(baseUrl + 'buggy/not-found')\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios\n      .get(baseUrl + 'buggy/bad-request')\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios\n      .get(baseUrl + 'buggy/server-error')\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios\n      .get(baseUrl + 'buggy/unauthorised')\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios.get(baseUrl + 'activities/notaguid').catch((err) => console.log(err));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + 'activities', {}).catch((err) => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as='h1' content='Test Error component' />\n      <Segment>\n        <Button.Group widths='7'>\n          <Button onClick={handleNotFound} content='Not Found' basic primary />\n          <Button\n            onClick={handleBadRequest}\n            content='Bad Request'\n            basic\n            primary\n          />\n          <Button\n            onClick={handleValidationError}\n            content='Validation Error'\n            basic\n            primary\n          />\n          <Button\n            onClick={handleServerError}\n            content='Server Error'\n            basic\n            primary\n          />\n          <Button\n            onClick={handleUnauthorised}\n            content='Unauthorised'\n            basic\n            primary\n          />\n          <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n        </Button.Group>\n      </Segment>\n      {errors && <ValidationErrors errors={errors} />}\n    </>\n  );\n}\n","import React from 'react';\nimport { Segment, Header, Icon, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name='search' />\n        Oops - not able to find what you are looking for\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to='/activities' primary content='Activities Page' />\n      </Segment.Inline>\n    </Segment>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport { useStore } from '../../app/stores/store';\n\nconst ServerError = () => {\n  const { commonStore } = useStore();\n\n  return (\n    <Container>\n      <Header as='h1' content='Server Error' />\n      <Header sub as='h5' color='red' content={commonStore.error?.message} />\n\n      {commonStore.error?.details && (\n        <Segment>\n          <Header as='h4' content='Stack Trace' color='teal' />\n          <code style={{ marginTop: 10 }}>{commonStore.error.details}</code>\n        </Segment>\n      )}\n    </Container>\n  );\n};\n\nexport default observer(ServerError);\n","import { observer } from 'mobx-react-lite';\nimport { Modal } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\n\nconst ModalContainer = () => {\n    const {modalStore} = useStore();\n\n    return (\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n            <Modal.Content>\n                {modalStore.modal.body}\n            </Modal.Content>\n        </Modal>\n    )\n}\n\nexport default observer(ModalContainer)\n","import React, { SyntheticEvent, useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { UserActivity } from '../../app/models/Profile';\nimport { format } from 'date-fns';\nimport { useStore } from '../../app/stores/store';\n\nconst panes = [\n  { menuItem: 'Future Events', pane: { key: 'future' } },\n  { menuItem: 'Past Events', pane: { key: 'past' } },\n  { menuItem: 'Hosting', pane: { key: 'hosting' } },\n];\n\nexport default observer(function ProfileActivities() {\n  const { profileStore } = useStore();\n  const { loadUserActivities, profile, loadingUserActivities, userActivities } =\n    profileStore;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(\n      profile!.username,\n      panes[data.activeIndex as number].pane.key,\n    );\n  };\n\n  return (\n    <Tab.Pane loading={loadingUserActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated='left' icon='calendar' content={'Activities'} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}>\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: 'cover' }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign='center'>{activity.title}</Card.Header>\n                  <Card.Meta textAlign='center'>\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport {\n  CardGroup,\n  Grid,\n  GridColumn,\n  Header,\n  TabPane,\n} from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport ProfileCard from './Profilecard';\n\nconst ProfileFollowings = () => {\n  const { profileStore } = useStore();\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\n\n  return (\n    <TabPane loading={loadingFollowings}>\n      <Grid>\n        <GridColumn width={16}>\n          <Header\n            floated='left'\n            icon='user'\n            content={\n              activeTab === 3\n                ? `People following ${profile?.displayName}`\n                : `People ${profile?.displayName} is following`\n            }\n          />\n        </GridColumn>\n        <GridColumn width={16}>\n          <CardGroup itemsPerRow={4}>\n            {followings.map((profile) => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </CardGroup>\n        </GridColumn>\n      </Grid>\n    </TabPane>\n  );\n};\n\nexport default observer(ProfileFollowings);\n","import React from 'react';\nimport { Cropper } from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n  setCropper: (cropper: Cropper) => void;\n  imagePreview: string;\n}\n\nconst PhotoWidgetCropper = ({ setCropper, imagePreview }: Props) => {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: '100%' }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview='.img-preview'\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    />\n  );\n};\n\nexport default PhotoWidgetCropper;\n","import { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Header, Icon } from 'semantic-ui-react';\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nconst PhotoWidgetDropzone = ({ setFiles }: Props) => {\n  const dzSTyle = {\n    border: 'dashed 3px #eee',\n    borderColor: '#eee',\n    borderRaduis: '5px',\n    paddingTop: '30px',\n    textAlign: 'center' as 'center',\n    height: 200,\n  };\n\n  const dzActive = {\n    borderColor: 'green',\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      // Do something with the files\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          }),\n        ),\n      );\n    },\n    [setFiles],\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={isDragActive ? { ...dzSTyle, ...dzActive } : { ...dzSTyle }}>\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content='Drop Image Here' />\n    </div>\n  );\n};\n\nexport default PhotoWidgetDropzone;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Grid,\n  GridColumn,\n  Header,\n} from 'semantic-ui-react';\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\n\ninterface Props {\n  uploading: boolean;\n  handlePhotoUpload: (file: Blob) => void;\n}\n\nconst PhotoUploadWidget = ({ uploading, handlePhotoUpload }: Props) => {\n  const [files, setFiles] = useState<any>([]);\n\n  const [cropper, setCropper] = useState<Cropper>();\n\n  const onCrop = () => {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob((blob) => handlePhotoUpload(blob!));\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    };\n  }, [files]);\n\n  return (\n    <Grid>\n      <GridColumn width={4}>\n        <Header sub color='teal' content='Step 1 - Add Photo' />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </GridColumn>\n      <GridColumn width={1} />\n      <GridColumn width={4}>\n        <Header sub color='teal' content='Step 2 - Resize Photo' />\n        {files && files.length > 0 && (\n          <PhotoWidgetCropper\n            setCropper={setCropper}\n            imagePreview={files[0].preview}\n          />\n        )}\n      </GridColumn>\n      <GridColumn width={1} />\n      <GridColumn width={4}>\n        <Header sub color='teal' content='Step 3 - Preview and Upload Photo' />\n        {files && files.length > 0 && (\n          <>\n            <div\n              className='img-preview'\n              style={{ minHeight: 200, overflow: 'hidden' }}\n            />\n            <ButtonGroup widths={2}>\n              <Button\n                onClick={onCrop}\n                positive\n                icon='check'\n                loading={uploading}\n              />\n              <Button\n                onClick={() => setFiles([])}\n                icon='close'\n                disabled={uploading}\n              />\n            </ButtonGroup>\n          </>\n        )}\n      </GridColumn>\n    </Grid>\n  );\n};\n\nexport default PhotoUploadWidget;\n","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent, useState } from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardGroup,\n  Grid,\n  GridColumn,\n  Header,\n  Image,\n  TabPane,\n} from 'semantic-ui-react';\nimport PhotoUploadWidget from '../../app/common/ImageUpload/PhotoUploadWidget';\nimport { Photo, Profile } from '../../app/models/Profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface Props {\n  profile: Profile;\n}\n\nconst ProfilePhotos = ({ profile }: Props) => {\n  const {\n    profileStore: {\n      isCurrentUser,\n      uploadPhoto,\n      uploading,\n      setMainPhoto,\n      loading,\n      deletePhoto,\n    },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState('');\n\n  const handlePhotoUpload = (file: Blob) => {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  };\n\n  const handleSetMainPhoto = (\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>,\n  ) => {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  };\n\n  const handleDeletePhoto = (\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>,\n  ) => {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  };\n\n  return (\n    <TabPane>\n      <Grid>\n        <GridColumn width={16}>\n          <Header icon='image' content='Photos' floated='left' />\n          {isCurrentUser && (\n            <Button\n              floated='right'\n              basic\n              content={addPhotoMode ? 'Cancel' : 'Add Photo'}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </GridColumn>\n        <GridColumn width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              handlePhotoUpload={handlePhotoUpload}\n              uploading={uploading}\n            />\n          ) : (\n            <CardGroup itemsPerRow={5}>\n              {profile.photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <ButtonGroup fluid widths={2}>\n                      <Button\n                        basic\n                        color='green'\n                        content='Main'\n                        name={'main' + photo.id}\n                        disabled={photo.isMain}\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\n                        loading={target === 'main' + photo.id && loading}\n                      />\n\n                      <Button\n                        basic\n                        color='red'\n                        icon='trash'\n                        name={photo.id}\n                        loading={target === photo.id && loading}\n                        onClick={(e) => handleDeletePhoto(photo, e)}\n                        disabled={photo.isMain}\n                      />\n                    </ButtonGroup>\n                  )}\n                </Card>\n              ))}\n            </CardGroup>\n          )}\n        </GridColumn>\n      </Grid>\n    </TabPane>\n  );\n};\n\nexport default observer(ProfilePhotos);\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Tab, TabPane } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/Profile';\nimport { useStore } from '../../app/stores/store';\nimport ProfileActivities from './ProfileActivities';\nimport ProfileFollowings from './ProfileFollowings';\nimport ProfilePhotos from './ProfilePhotos';\n\ninterface Props {\n  profile: Profile;\n}\n\nconst ProfileContent = ({ profile }: Props) => {\n  const { profileStore } = useStore();\n\n  const panes = [\n    { menuItem: 'About', render: () => <TabPane>About Content</TabPane> },\n    { menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} /> },\n    { menuItem: 'Events', render: () => <ProfileActivities /> },\n    {\n      menuItem: 'Followers',\n      render: () => <ProfileFollowings />,\n    },\n    {\n      menuItem: 'Followings',\n      render: () => <ProfileFollowings />,\n    },\n  ];\n\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition='right'\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  );\n};\n\nexport default observer(ProfileContent);\n","import { observer } from 'mobx-react-lite';\nimport {\n  Divider,\n  Grid,\n  GridColumn,\n  Header,\n  Item,\n  ItemContent,\n  ItemGroup,\n  ItemImage,\n  Segment,\n  Statistic,\n  StatisticGroup,\n} from 'semantic-ui-react';\nimport { Profile } from '../../app/models/Profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n  profile: Profile;\n}\n\nconst ProfileHeader = ({ profile }: Props) => {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <ItemGroup>\n            <Item>\n              <ItemImage\n                avatar\n                size='small'\n                src={profile.image || '/assets/user.png'}\n              />\n              <ItemContent verticalAlign='middle'>\n                <Header as='h1' content={profile.displayName} />\n              </ItemContent>\n            </Item>\n          </ItemGroup>\n        </Grid.Column>\n        <GridColumn width={4}>\n          <StatisticGroup widths={2}>\n            <Statistic label='Followers' value={profile.follwersCount} />\n            <Statistic label='Following' value={profile.followingCount} />\n          </StatisticGroup>\n          <Divider />\n          <FollowButton profile={profile} />\n        </GridColumn>\n      </Grid>\n    </Segment>\n  );\n};\n\nexport default observer(ProfileHeader);\n","import { useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useParams } from 'react-router-dom';\nimport { Grid, GridColumn } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport ProfileContent from './ProfileContent';\nimport ProfileHeader from './ProfileHeader';\n\nconst ProfilePage = () => {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { profile, loadProfile, setActiveTab } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    };\n  }, [username, loadProfile, setActiveTab]);\n\n  return (\n    <Grid>\n      <GridColumn width={16}>\n        {profile && <ProfileHeader profile={profile} />}\n        {profile && <ProfileContent profile={profile} />}\n      </GridColumn>\n    </Grid>\n  );\n};\n\nexport default observer(ProfilePage);\n","import { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router';\nimport { useStore } from '../stores/store';\n\ninterface Props extends RouteProps {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }: Props) => {\n  const {\n    userStore: { isLoggedIn },\n  } = useStore();\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to='/' />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { ToastContainer } from 'react-toastify';\n\nimport NarBar from './NavBar';\nimport { observer } from 'mobx-react-lite';\nimport { Route, useLocation, Switch } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport LoginForm from '../../features/users/LoginForm';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  const { key } = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading App' />;\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route path='/' component={HomePage} exact />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NarBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute\n                  path='/activities'\n                  component={ActivityDashboard}\n                  exact\n                />\n                <PrivateRoute\n                  path='/activities/:id'\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  path={['/createActivity', '/manage/:id']}\n                  component={ActivityForm}\n                  key={key}\n                />\n                <PrivateRoute\n                  path='/profiles/:username'\n                  component={ProfilePage}\n                />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route path='/login' component={LoginForm} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { StoreContext, store } from './app/stores/store';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}